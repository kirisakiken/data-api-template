// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum StudentType {
  unknown
  associate
  bachelors
  masters
  doctoral
}

enum LecturerType {
  assistant_professor
  associate_professor
  full_professor
  distinguished_professor
}

model User {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email String @unique
  hash String

  firstName String?
  lastName String?

  bookmarks Bookmark[]

  @@map("users")
}

model Bookmark {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title String
  description String?
  link String

  user_id Int
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("bookmarks")
}

model Student {
  id Int @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  student_no Int @unique
  first_name String
  last_name String
  student_type StudentType
  entry_year Int

  @@id([student_no])
  @@map("students")
}

model Lecturer {
  id Int @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  lecturer_no Int @unique
  first_name String
  last_name String
  lecturer_type LecturerType
  entry_year Int
  salary Int

  lectures Lecture[]

  @@id([lecturer_no])
  @@map("lecturers")
}

model Lecture {
  id Int @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  lecture_no String @unique
  lecturer_reference Int?

  lecturer Lecturer? @relation(fields: [lecturer_reference], references: [lecturer_no])

  @@id([lecture_no])
  @@map("lectures")
}
